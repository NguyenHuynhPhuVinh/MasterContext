// src/store/initialState.ts
import { type GroupStats, type AttachedItem } from "./types";

export const defaultGroupStats = (): GroupStats => ({
  total_files: 0,
  total_dirs: 0,
  total_size: 0,
  token_count: 0,
});

export const initialState = {
  rootPath: null,
  selectedPath: null,
  allGroups: new Map(),
  groups: [],
  projectStats: null,
  fileTree: null,
  fileMetadataCache: null,
  activeScene: "dashboard" as "dashboard" | "settings",
  editingGroupId: null,
  inlineEditingGroup: null,
  isScanning: false,
  isRescanning: false,
  scanProgress: { currentFile: null, currentPhase: "scanning" as const },
  isUpdatingGroupId: null,
  tempSelectedPaths: null,
  isCrossLinkingEnabled: false,
  isGroupEditorPanelVisible: false,
  isEditorPanelVisible: false,
  activeEditorFile: null,
  activeEditorFileContent: null,
  isEditorLoading: false,
  activeEditorFileExclusions: null,
  stagedFileChanges: new Map(),
  syncEnabled: false,
  syncPath: null,
  customIgnorePatterns: [],
  isWatchingFiles: false,
  exportUseFullTree: false,
  exportWithLineNumbers: true,
  exportWithoutComments: false,
  exportRemoveDebugLogs: false,
  exportSuperCompressed: false,
  alwaysApplyText: null,
  exportExcludeExtensions: [],
  gitExportModeIsContext: false,
  profiles: ["default"],
  activeProfile: "default",
  isSidebarVisible: true,
  recentPaths: [],
  nonAnalyzableExtensions: [],
  isGitPanelVisible: false,
  gitRepoInfo: null,
  gitStatus: null,
  gitCommits: [],
  gitLogState: "idle" as "idle" | "loading_repo" | "loading_commits" | "error",
  gitCurrentPage: 0,
  hasMoreCommits: true,
  originalGitBranch: null,
  isAiPanelVisible: false,
  aiChatMode: "ask" as "ask" | "context" | "agent",
  openRouterApiKey: "",
  googleApiKey: "",
  allAvailableModels: [],
  aiModels: [],
  chatMessages: [],
  isAiPanelLoading: false,
  chatSessions: [],
  activeChatSessionId: null,
  abortController: null,
  activeChatSession: null,
  temperature: 1.0,
  topP: 1.0,
  topK: 0, // 0 means not set
  maxTokens: 0, // 0 means not set
  systemPrompt: "",
  streamResponse: true,
  selectedAiModel: "openai/gpt-3.5-turbo",
  thinkingBudget: -1, // -1 for dynamic
  reasoningEffort: "medium",
  includeThoughts: true,
  aiAttachedFiles: [] as AttachedItem[],
};

export type InitialState = typeof initialState;
